#!/usr/bin/env python3
import argparse, sys

def main():
    
    parser = argparse.ArgumentParser(description='Debian Repository Manager',
             epilog='Easily manage debian packages and local repositories,'
                    ' including the creation of base debian packages. '
                    'Automate everything.  '
                    'Copyright SAIT (C) Radlab, Applied Research 2013')
    parser.add_argument('command', nargs=1,
                        help='add, del, move, copy, info')
    parser.add_argument('repository', nargs=2,
                        help='Name / Address for the repository, Ex: "apt.testsite.com"; '
                        'http:// prefixes are removed automatically.')
    
    parser.add_argument('--component',  action='append', nargs='*',
                        help='Specify a component')
    parser.add_argument('--repo', action='append', nargs='*',
                        help='Specify a repository')
    parser.add_argument('--arch', 
                        help='Specify an architecture')
    
    parser.add_argument('--sign', action='store_true',
                        help='Signs a repository with a gpg key provided' 
                        ' a key has been created')
    parser.add_argument('--refresh', 
                        help='Remove and re-create the repository with '
                        ' list of packages of the latest version, '
                        'removing all older versions if found')
    parser.add_argument('--conf', 
                        help='Use a specific configuration file'
    
    
    parser.add_argument('--print-address',
                        help='Print all /etc/hosts lines needed for a fully '
                        'functioning repository to exist')
    parser.add_argument('--conf', 
                        help='Use a specific configuration file'
                        ' (defaults to /etc/drep/drep.conf)')
    
    parser.add_argument('--noninteractive', action='store_true',
                        help='Any command that is run should do so '
                        'without prompting user. Use defaults and environmental'
                        ' vars whenever possible or fail.')
    
    parseargs = parser.parse_args(sys.argv[1:])
    print(parseargs)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("No arguments specified.\n")
        sys.exit(1)
    main()
    sys.exit(0)